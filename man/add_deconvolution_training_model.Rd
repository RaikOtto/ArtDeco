% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Train_model.R
\name{add_deconvolution_training_model}
\alias{add_deconvolution_training_model}
\title{add_deconvolution_training_model}
\usage{
add_deconvolution_training_model(
    training_data = "",
    model_name = "",
    subtype_vector,
    marker_gene_list = list(),
    training_p_value_threshold = 0.05,
    training_nr_permutations = 100,
    training_nr_marker_genes = 100
)
}
\arguments{
\item{training_data}{Transcriptomic data to be used for training.
Has to contain the cell subtypes to which the similarity has to
be calculated. Note that the first column has to contain the
HGNC symbols and the header not! not the first sample name
but a mere label for this HGNC row.}

\item{model_name}{Name of the model}

\item{subtype_vector}{Character vector containing the subtype
labels of the training data samples}

\item{marker_gene_list}{List the contains the marker genes
for each subtype. Has to be in the type of list() with each
subtype being an entry.}

\item{training_p_value_threshold}{P-value at which a training
is deemed successfull}

\item{training_nr_permutations}{Amount of perturbation which
result in a p-value. Higher number of perturbation generally
improves the p-value estiamtes}

\item{training_nr_marker_genes}{How many genes should be utilized
as list of marker genes}
}
\value{
Stores a new model in the package directory
}
\description{
\code{add_deconvolution_training_model} adds a new model
}
\examples{
transcriptome_data = system.file(
"Data/Expression_data/PANnen_Test_Data.tsv",package ="artdeco")
meta_data_path = system.file("Data/Meta_Data.tsv", package = "artdeco")
meta_data      = read.table(
    meta_data_path, sep = "\\t",
    header = TRUE,
    stringsAsFactors = FALSE
)
subtype_vector = meta_data$Subtype # extract the training sample subtype labels
add_deconvolution_training_model(
    training_data = transcriptome_data,
    model_name = "Test_model",
    subtype_vector,
    training_p_value_threshold = 0.05,
    training_nr_permutations = 100,
    training_nr_marker_genes = 100
)
}
